class Solution {
public:
	vector<vector<int>> merge(vector<vector<int>>&intervals) {
		vector<vector<int>>result;
		
		sort(intervals.begin(), intervals.end());
		
		stack<pair<int, int>>st;
		
		st.push({intervals[0][0], intervals[0][1]});
		
		for(int i=1; i<intervals.size(); i++){
			if(st.top().second >= intervals[i][0]){
				if(st.top().second > intervals[i][1])
					continue;
				pair<int, int>temp=st.top();
				st.top();
				st.push({temp.first, intervals[i][1]});
			} else {
				st.push({intervals[i][0], intervals[i][1]});
			}
		}
		
		vector<vector<int>>temp(1, vector<int>(2));
			
		while(!st.empty()){
			temp[0][0] = st.top().first;
			temp[0][1] = st.top().second;
			result.push_back(temp[0]);
			st.pop();
		}
		
		reverse(result.begin(), result.end());
		
		return result;
	}
};
